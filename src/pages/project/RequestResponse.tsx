import { useParams, useNavigate } from 'react-router-dom';
import { LineChartOutlined } from '@ant-design/icons';
import {
  Card,
  Col,
  Row,
  Typography,
  Statistic,
  Rate,
  Button,
  Space,
  Tag,
  Avatar

} from 'antd';
import { Line } from 'react-chartjs-2';
import { Pie } from 'react-chartjs-2';
import { ArrowLeftOutlined, FileTextOutlined, UserOutlined, ClockCircleOutlined, FileSearchOutlined, StarOutlined } from '@ant-design/icons';
import { Chart, registerables } from 'chart.js';
import { useState } from 'react';
import ProjectRatingModal from './components/ProjectRatingModal';
// import { color } from 'chart.js/helpers';




Chart.register(...registerables);
const { Title, Text } = Typography;

const RequestResponse = () => {
  const { pId } = useParams();
  const navigate = useNavigate();
  const [isModalOpen, setIsModalOpen] = useState(false);

  const projectName = 'N·ªÅn T·∫£ng Qu·∫£n L√Ω Nh√¢n S·ª± UWU';

  const progressLabels = [
    'Giai ƒëo·∫°n 1',
    'Giai ƒëo·∫°n 2',
    'Giai ƒëo·∫°n 3',
    'Giai ƒëo·∫°n 4',
    'Giai ƒëo·∫°n 5',
  ];
  const progressColors = ['#1890ff', '#d9d9d9', '#1890ff', '#1890ff', '#d9d9d9'];

  const progressData = {
    labels: progressLabels,
    datasets: [
      {
        data: [1, 1, 1, 1, 1],
        backgroundColor: progressColors,
        borderWidth: 1,
      },
    ],
  };

  const lineData = {
    labels: ['Tu·∫ßn 1', 'Tu·∫ßn 2', 'Tu·∫ßn 3', 'Tu·∫ßn 4', 'Tu·∫ßn 5', 'Tu·∫ßn 6', 'Tu·∫ßn 7', 'Tu·∫ßn 8', 'Tu·∫ßn 9', 'Tu·∫ßn 10'],
    datasets: [
      {
        label: 'B√°o c√°o ph√≠a c√¥ng ty',
        data: [2, 3, 2, 4, 3, 5, 4, 6, 5, 7],
        fill: false,
        borderColor: '#1890ff',
        tension: 0.3,
      },
      {
        label: 'B√°o c√°o ph√≠a kh√°ch h√†ng',
        data: [1, 2, 1, 2, 2, 3, 16, 3, 3, 4],
        fill: false,
        borderColor: '#52c41a',
        tension: 0.3,
      },
    ],
  };

  return (

    <div style={{ padding: '14px', maxWidth: 950, margin: '0 auto' }}>
      {/* H√ÄNG N√öT ƒêI·ªÄU H∆Ø·ªöNG */}
      <Row justify="space-between" align="middle" style={{ marginBottom: 16 }}>
        <Col>
          <Space>
            <Button
              icon={<ArrowLeftOutlined />}
              onClick={() => navigate(`/customers-projects`)}
            >
              Quay l·∫°i danh s√°ch
            </Button>
            <Button
              icon={<FileSearchOutlined />}
              onClick={() => navigate(`/project/${pId}`)}
            >
              Xem chi ti·∫øt d·ª± √°n
            </Button>
          </Space>
        </Col>
      </Row>

      {/* TI√äU ƒê·ªÄ + N√öT ƒê√ÅNH GI√Å */}
      <Row justify="space-between" align="middle" style={{ marginBottom: 16 }}>
        <Col>
          <Title level={4} style={{ margin: 0 }}>
            ƒê√°nh gi√° t·ªïng quan d·ª± √°n
          </Title>
        </Col>
        <Col>

          <Button type="primary"
            icon={<StarOutlined />}
            onClick={() => setIsModalOpen(true)}>
            ƒê√°nh gi√° d·ª± √°n
          </Button>
        </Col>
      </Row>

      {/* TH√îNG TIN D·ª∞ √ÅN */}
      <Card style={{ marginBottom: 15 }}>
        {/* Ti√™u ƒë·ªÅ d·ª± √°n */}
        <Title level={5} style={{ marginBottom: 12, fontSize: 20 }}>
          D·ª± √°n: <span style={{ color: '#1890ff' }}>{projectName}</span>
        </Title>

        {/* Grid th√¥ng tin kh√°ch h√†ng v√† th·ªùi gian */}
        <Row gutter={24}>
          <Col span={12} style={{ marginBottom: 7 }}>
            <Text strong>Kh√°ch h√†ng:</Text> H·ªá th·ªëng gi√°o d·ª•c SteamX
          </Col>

          <Col span={12} style={{ marginBottom: 7 }}>
            <Text strong>Th·ªùi gian b·∫Øt ƒë·∫ßu:</Text> 01/06/2025
          </Col>
          <Col span={12} style={{ marginBottom: 7 }}>
            <Text strong>Qu·∫£n l√Ω d·ª± √°n:</Text> Duy minh
          </Col>
          <Col span={12}>
            <Text strong>Th·ªùi gian k·∫øt th√∫c (d·ª± ki·∫øn):</Text> 30/07/2025
          </Col>
        </Row>
      </Card>



      {/* BI·ªÇU ƒê·ªí & TH·ªêNG K√ä */}
      <Row gutter={24} style={{ marginBottom: 24 }}>
        <Col span={8}>
          <Card title="Ti·∫øn ƒë·ªô d·ª± √°n" size="small">
            <div style={{ textAlign: 'center', marginBottom: 12 }}>
              <Tag color="#1890ff">ƒê√£ ho√†n th√†nh</Tag>
              <Tag color="#d9d9d9">Ch∆∞a ho√†n th√†nh</Tag>
            </div>
            <div style={{ height: '200px' }}>
              <Pie
                data={progressData}
                options={{
                  plugins: { legend: { display: false } },
                  maintainAspectRatio: false,
                }}
              />
            </div>
            <div style={{ textAlign: 'center', fontWeight: 'bold', marginTop: 8 }}>
              ƒê√£ ho√†n th√†nh: 4/5 giai ƒëo·∫°n
            </div>
          </Card>
        </Col>

        <Col span={16}>
          <Card size="small">
            <Row gutter={16}>
              <Col span={8}>
                <Statistic
                  title="B√°o c√°o ph√≠a c√¥ng ty"
                  value={28}
                  prefix={<FileTextOutlined />}
                  valueStyle={{ color: '#1890ff' }}
                />
              </Col>
              <Col span={8}>
                <Statistic
                  title="B√°o c√°o ph√≠a kh√°ch h√†ng"
                  value={37}
                  prefix={<FileTextOutlined />}
                  valueStyle={{ color: '#52c41a' }}
                />
              </Col>
              <Col span={8}>
                <Statistic
                  title="S·ªë gi·ªù th·ª±c hi·ªán"
                  value={1.572}
                  prefix={<ClockCircleOutlined />}
                  valueStyle={{ color: '#1890ff' }}
                />
              </Col>
            </Row>

            <div style={{ marginTop: 20 }}>
              <Title level={5}>
                <LineChartOutlined style={{ marginRight: 8 }} />
                B√°o c√°o theo th·ªùi gian
              </Title>
              <div style={{ height: '200px' }}>
                <Line
                  data={lineData}
                  options={{
                    maintainAspectRatio: false,
                    plugins: { legend: { position: 'bottom' } },
                  }}
                />
              </div>
            </div>
          </Card>
        </Col>
      </Row>

      {/* ƒê√ÅNH GI√Å T·ª™ KH√ÅCH H√ÄNG */}
      <Card
        title="üó£Ô∏è ƒê√°nh gi√° t·ª´ kh√°ch h√†ng"
        style={{
          backgroundColor: '#f6ffed', // n·ªÅn xanh l√° nh·∫°t
          border: '1px solid #b7eb8f',
          borderRadius: 8,
        }}
      >
        {/* H√†ng 1: Avatar + T√™n kh√°ch h√†ng / ƒê√°nh gi√° sao */}
        <Row gutter={24} style={{ marginBottom: 12 }} align="middle">
          <Col span={12}>
            <div style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
              <Avatar size={32} icon={<UserOutlined />} />
              <div>
                <Text strong>Kh√°ch h√†ng:</Text>
                <div>H·ªá th·ªëng gi√°o d·ª•c SteamX</div>
              </div>
            </div>
          </Col>
          <Col span={12}>
            <Text strong>ƒê√°nh gi√°:</Text>
            <div>
              <Rate disabled defaultValue={5} />
            </div>
          </Col>
        </Row>

        {/* H√†ng 2: Nh·∫≠n x√©t */}
        <Row style={{ marginBottom: 12 }}>
          <Col span={24}>
            <Text strong>Nh·∫≠n x√©t:</Text>
            <div style={{ marginTop: 4 }}>
              Nh√≥m ph√°t tri·ªÉn h·ªó tr·ª£ t·ªët, ph·∫£n h·ªìi nhanh.
              Giao di·ªán r√µ r√†ng nh∆∞ng c·∫ßn c·∫£i thi·ªán ph·∫ßn b√°o c√°o xu·∫•t file.
            </div>
          </Col>
        </Row>

        {/* H√†ng 3: G√≥p √Ω th√™m */}
        <Row>
          <Col span={24}>
            <Text strong>G√≥p √Ω th√™m:</Text>
            <div style={{ marginTop: 4 }}>
              Nh√≥m c·∫ßn b·ªï sung ch·ª©c nƒÉng xu·∫•t b√°o c√°o ƒë·ªãnh d·∫°ng PDF, c·∫£i thi·ªán t·ªëc ƒë·ªô ph·∫£n h·ªìi khi g·ª≠i y√™u c·∫ßu.
            </div>
          </Col>
        </Row>
      </Card>

      {/* MODAL ƒê√ÅNH GI√Å */}
      <ProjectRatingModal
        open={isModalOpen}
        onOk={(values) => {
          console.log('ƒê√°nh gi√° g·ª≠i:', values);
          setIsModalOpen(false);
        }}
        onCancel={() => setIsModalOpen(false)}
      />
    </div >

  );
};

export default RequestResponse;
